#!/usr/bin/env node

 /**
  * Module dependencies.
  */

var app = require('../app');
var debug = require('debug')('express-sequelize'); //is 'express-sequelize' right?
var http = require('http');
//var models = require('../models');
var models = require("../models"); //in video ('../models').sequelize;

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

var server = http.createServer(app); //create HTTP server

models.sequelize.sync().then(function() { //models.sequelize.sync()? updates database tables automatically every time the server starts
    server.listen(port);
});
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
  return false;
  }
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }
  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

    switch (error.code) {
      case 'EACCES':
        console.error(bind + ' requires elevated privileges');
        process.exit(1);
        break;
      case 'EADDRINUSE':
        console.error(bind + ' is already in use');
        process.exit(1);
        break;
      default:
        throw error;
    }
  }

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'Pipe ' + addr
    : 'Port ' + addr.port;
  debug('Listening on ' + bind);
}
